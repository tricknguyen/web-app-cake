#pragma checksum "D:\.NET\ASP\Rocky\Rocky\Views\Home\tellmemore.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b06fdb5608b9e3a12e87f265a55672259f98193f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_tellmemore), @"mvc.1.0.view", @"/Views/Home/tellmemore.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\.NET\ASP\Rocky\Rocky\Views\_ViewImports.cshtml"
using Rocky;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\.NET\ASP\Rocky\Rocky\Views\_ViewImports.cshtml"
using Rocky_Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\.NET\ASP\Rocky\Rocky\Views\_ViewImports.cshtml"
using React.Web.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\.NET\ASP\Rocky\Rocky\Views\_ViewImports.cshtml"
using React.AspNet;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b06fdb5608b9e3a12e87f265a55672259f98193f", @"/Views/Home/tellmemore.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"17cf6a2d121aa663faf94a9eaebfe00d9b3aebf4", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_tellmemore : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b06fdb5608b9e3a12e87f265a55672259f98193f3297", async() => {
                WriteLiteral(@"
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
    <link rel=""stylesheet""
          href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css""
          integrity=""sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC""
          crossorigin=""anonymous"" />
    <link rel=""stylesheet""
          href=""https://pro.fontawesome.com/releases/v5.10.0/css/all.css""
          integrity=""sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p""
          crossorigin=""anonymous"" />
    <link rel=""stylesheet"" href=""/css/TellMeMore.css"" />
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    <div class=""container"" style=""margin-top:70px!important;"">



        <div class=""row mb-4"">
            <div class=""col-4"">
                <div id=""curve"" class=""card card-repice hello1"" >
                    <div class=""footer-recipe"">
                        <div class=""connections"">
                            <p class=""connection recipe"" id=""recipe-icon1"">R</p>
                            <p class=""connection recipe"" id=""recipe-icon2"">E</p>
                            <p class=""connection recipe"" id=""recipe-icon3"">C</p>
                            <p class=""connection recipe"" id=""recipe-icon4"">I</p>
                            <p class=""connection recipe"" id=""recipe-icon5"">P</p>
                            <p class=""connection recipe"" id=""recipe-icon6"">E</p>
                        </div>
                        <svg id=""curve"">
                            <path id=""p"" d=""M0,-160 Q150,-160 500,-160 V400 H0 V50"" transform=""translate(0 300)"" />
                            <rect i");
            WriteLiteral(@"d=""dummyRect"" x=""0"" y=""0"" height=""450"" width=""400"" fill=""transparent"" />
                            <!-- slide up-->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-0 500,-160 V400 H0 V50"" fill=""freeze"" begin=""dummyRect.mouseover"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce1"" />
                            <!-- slide up and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-300 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce1.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce2"" />
                            <!-- slide down and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-100 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce2.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce3"" />
                            <!-- slide down and curve out -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-190 500,-160  ");
            WriteLiteral(@"V400 H0 V50"" fill=""freeze"" begin=""bounce3.end"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce4"" />
                            <!-- curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-160 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce4.end"" end=""dummyRect.mouseout"" dur=""0.05s"" id=""bounce5"" />
                        </svg>
                        <div class=""info"">
                            <article>
                                <h2>Super Moist Chocolate Cupcakes</h2>
                                <h3>Cake</h3>
                                <ul>
                                    <li><i class=""fas fa-user-alt""></i> <span>12</span></li>
                                    <li><i class=""fas fa-clock""></i> <span>45 min</span></li>
                                    <li><i class=""fas fa-signal""></i> <span>Beginner level</span></li>
                                    <li><i class=""fas fa-fire""></i> <span>177Â°C</span></li>
              ");
            WriteLiteral(@"                  </ul>
                                <p>Made from simple everyday ingredients, these chocolate cupcakes with vanilla frosting will be your new favorite. For best results, use natural cocoa powder and buttermilk.</p>
                                <p class=""ingredients""><span>Ingredients:&nbsp;</span>Milk, salt, coriander, cardamom, cinnamon, turmeric, honey, vanilla extract, regular oats, oat bran.</p>
                            </article>
                        </div>
                    </div>
                    <div class=""card-blur""></div>
                </div>



            </div>
            <div class=""col-8"">
                <div class=""video-recipe"">
                    <iframe width=""100%""
                            src=""https://www.youtube.com//embed/rh34-M0E854""
                            frameborder=""0""
                            gesture=""media""
                            allow=""autoplay; encrypted-media""
                            allowfullscreen>");
            WriteLiteral(@"</iframe>
                </div>
            </div>
        </div>
        <div class=""row mb-4"">
            <div class=""col-8"">
                <div class=""video-recipe"">
                    <iframe width=""100%""
                            src=""https://www.youtube.com//embed/PSZ-QPF-jto""
                            frameborder=""0""
                            gesture=""media""
                            allow=""autoplay; encrypted-media""
                            allowfullscreen></iframe>
                </div>
            </div>
            <div class=""col-4"">
                <div id=""curve"" class=""card card-repice hello2"" >
                    <div class=""footer-recipe"">

                        <div class=""connections"">
                            <p class=""connection recipe"" id=""recipe-icon1"">R</p>
                            <p class=""connection recipe"" id=""recipe-icon2"">E</p>
                            <p class=""connection recipe"" id=""recipe-icon3"">C</p>
                        ");
            WriteLiteral(@"    <p class=""connection recipe"" id=""recipe-icon4"">I</p>
                            <p class=""connection recipe"" id=""recipe-icon5"">P</p>
                            <p class=""connection recipe"" id=""recipe-icon6"">E</p>

                        </div>
                        <svg id=""curve"">
                            <path id=""p"" d=""M0,-160 Q150,-160 500,-160 V400 H0 V50"" transform=""translate(0 300)"" />
                            <rect id=""dummyRect"" x=""0"" y=""0"" height=""450"" width=""400"" fill=""transparent"" />
                            <!-- slide up-->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-0 500,-160 V400 H0 V50"" fill=""freeze"" begin=""dummyRect.mouseover"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce1"" />
                            <!-- slide up and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-300 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce1.end"" end=""dummyRect.mouseout"" dur=""0.15s""");
            WriteLiteral(@" id=""bounce2"" />
                            <!-- slide down and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-100 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce2.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce3"" />
                            <!-- slide down and curve out -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-190 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce3.end"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce4"" />
                            <!-- curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-160 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce4.end"" end=""dummyRect.mouseout"" dur=""0.05s"" id=""bounce5"" />
                        </svg>
                        <div class=""info"">
                            <article>
                                <h2>Pineapple Coconut Cake</h2>
                                <h3>Cake</h");
            WriteLiteral(@"3>
                                <ul>
                                    <li><i class=""fas fa-user-alt""></i> <span>12</span></li>
                                    <li><i class=""fas fa-clock""></i> </span><span>2 hours</span></li>
                                    <li><i class=""fas fa-signal""></i> <span>Intermediate level</span></li>
                                    <li><i class=""fas fa-fire""></i> </span><span>177Â°C</span></li>
                                </ul>
                                <p>This pineapple coconut cake includes pineapple chunks, coconut, coconut milk, plus homemade pineapple curd and cream cheese frosting. Each bite is packed with moist texture and irresistible flavor.</p>
                                <p class=""ingredients""><span>Ingredients:&nbsp;</span>2 and 1/2 cups (263g) sifted cake flour,2 teaspoons baking powder, 1/2 teaspoon baking soda</p>
                            </article>
                        </div>
                    </div>
                 ");
            WriteLiteral(@"   <div class=""card-blur""></div>
                </div>
            </div>

        </div>
        <div class=""row mb-4"">
            <div class=""col-4"">
                <div id=""curve"" class=""card card-repice hello3"" >
                    <div class=""footer-recipe"">

                        <div class=""connections"">
                            <p class=""connection recipe"" id=""recipe-icon1"">R</p>
                            <p class=""connection recipe"" id=""recipe-icon2"">E</p>
                            <p class=""connection recipe"" id=""recipe-icon3"">C</p>
                            <p class=""connection recipe"" id=""recipe-icon4"">I</p>
                            <p class=""connection recipe"" id=""recipe-icon5"">P</p>
                            <p class=""connection recipe"" id=""recipe-icon6"">E</p>

                        </div>
                        <svg id=""curve"">
                            <path id=""p"" d=""M0,-160 Q150,-160 500,-160 V400 H0 V50"" transform=""translate(0 300)"" />
         ");
            WriteLiteral(@"                   <rect id=""dummyRect"" x=""0"" y=""0"" height=""450"" width=""400"" fill=""transparent"" />
                            <!-- slide up-->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-0 500,-160 V400 H0 V50"" fill=""freeze"" begin=""dummyRect.mouseover"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce1"" />
                            <!-- slide up and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-300 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce1.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce2"" />
                            <!-- slide down and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-100 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce2.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce3"" />
                            <!-- slide down and curve out -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0");
            WriteLiteral(@",-160 Q150,-190 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce3.end"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce4"" />
                            <!-- curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-160 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce4.end"" end=""dummyRect.mouseout"" dur=""0.05s"" id=""bounce5"" />
                        </svg>
                        <div class=""info"">
                            <article>
                                <h2>Chocolate Chip Loaf Cake</h2>
                                <h3>Cake</h3>
                                <ul>
                                    <li><i class=""fas fa-user-alt""></i> <span>10</span></li>
                                    <li><i class=""fas fa-clock""></i> </span><span>90 min</span></li>
                                    <li><i class=""fas fa-signal""></i> <span>Beginner level</span></li>
                                    <li><i class=""fas fa-fire""></i> </span><span");
            WriteLiteral(@">177Â°C</span></li>
                                </ul>
                                <p>This super moist and buttery chocolate chip loaf cake uses basic baking ingredients and tastes unbelievable with a 2 ingredient fudge-like glaze on top.</p>
                                <p class=""ingredients""><span>Ingredients:&nbsp;</span>1/4 cup (60g) sour cream, at room temperature, 1 and 1/2 teaspoons pure vanilla extract, 1/2 cup (120ml) whole milk.</p>
                            </article>
                        </div>
                    </div>
                    <div class=""card-blur""></div>
                </div>
            </div>
            <div class=""col-8"">
                <div class=""video-recipe"">
                    <iframe width=""100%""
                            src=""https://www.youtube.com//embed/w1JM1UeKQqA""
                            frameborder=""0""
                            gesture=""media""
                            allow=""autoplay; encrypted-media""
                   ");
            WriteLiteral(@"         allowfullscreen></iframe>
                </div>
            </div>
        </div>
        <div class=""row mb-4"">
            <div class=""col-8"">
                <div class=""video-recipe"">
                    <iframe width=""100%""
                            src=""https://www.youtube.com//embed/05iA6hw4waM""
                            frameborder=""0""
                            gesture=""media""
                            allow=""autoplay; encrypted-media""
                            allowfullscreen></iframe>
                </div>
            </div>
            <div class=""col-4"">
                <div id=""curve"" class=""card card-repice hello4"" >
                    <div class=""footer-recipe"">

                        <div class=""connections"">
                            <p class=""connection recipe"" id=""recipe-icon1"">R</p>
                            <p class=""connection recipe"" id=""recipe-icon2"">E</p>
                            <p class=""connection recipe"" id=""recipe-icon3"">C</p>");
            WriteLiteral(@"
                            <p class=""connection recipe"" id=""recipe-icon4"">I</p>
                            <p class=""connection recipe"" id=""recipe-icon5"">P</p>
                            <p class=""connection recipe"" id=""recipe-icon6"">E</p>

                        </div>
                        <svg id=""curve"">
                            <path id=""p"" d=""M0,-160 Q150,-160 500,-160 V400 H0 V50"" transform=""translate(0 300)"" />
                            <rect id=""dummyRect"" x=""0"" y=""0"" height=""450"" width=""400"" fill=""transparent"" />
                            <!-- slide up-->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-0 500,-160 V400 H0 V50"" fill=""freeze"" begin=""dummyRect.mouseover"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce1"" />
                            <!-- slide up and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-300 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce1.end"" end=""dummyR");
            WriteLiteral(@"ect.mouseout"" dur=""0.15s"" id=""bounce2"" />
                            <!-- slide down and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-100 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce2.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce3"" />
                            <!-- slide down and curve out -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-190 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce3.end"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce4"" />
                            <!-- curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-160 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce4.end"" end=""dummyRect.mouseout"" dur=""0.05s"" id=""bounce5"" />
                        </svg>
                        <div class=""info"">
                            <article>
                                <h2>Lemon Blueberry Tart</h2>
                    ");
            WriteLiteral(@"            <h3>Cake</h3>
                                <ul>
                                    <li><i class=""fas fa-user-alt""></i> <span>10</span></li>
                                    <li><i class=""fas fa-clock""></i> </span><span>1:30 hours</span></li>
                                    <li><i class=""fas fa-signal""></i> <span>Beginner level</span></li>
                                    <li><i class=""fas fa-fire""></i> </span><span>177Â°C</span></li>
                                </ul>
                                <p>There are 3 parts to this creamy lemon blueberry tart and each are prepared separately before bringing them all together. For best success, take your time and read through the recipe before starting.</p>
                                <p class=""ingredients""><span>Ingredients:&nbsp;</span>2 and 1/2 cups (263g) sifted cake flour,2 teaspoons baking powder, 1/2 teaspoon baking soda</p>
                            </article>
                        </div>
                    <");
            WriteLiteral(@"/div>
                    <div class=""card-blur""></div>
                </div>
            </div>

        </div>
        <div class=""row mb-4"">
            <div class=""col-4"">
                <div id=""curve"" class=""card card-repice hello5"" >
                    <div class=""footer-recipe"">

                        <div class=""connections"">
                            <p class=""connection recipe"" id=""recipe-icon1"">R</p>
                            <p class=""connection recipe"" id=""recipe-icon2"">E</p>
                            <p class=""connection recipe"" id=""recipe-icon3"">C</p>
                            <p class=""connection recipe"" id=""recipe-icon4"">I</p>
                            <p class=""connection recipe"" id=""recipe-icon5"">P</p>
                            <p class=""connection recipe"" id=""recipe-icon6"">E</p>

                        </div>
                        <svg id=""curve"">
                            <path id=""p"" d=""M0,-160 Q150,-160 500,-160 V400 H0 V50"" transform=""transla");
            WriteLiteral(@"te(0 300)"" />
                            <rect id=""dummyRect"" x=""0"" y=""0"" height=""450"" width=""400"" fill=""transparent"" />
                            <!-- slide up-->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-0 500,-160 V400 H0 V50"" fill=""freeze"" begin=""dummyRect.mouseover"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce1"" />
                            <!-- slide up and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-300 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce1.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce2"" />
                            <!-- slide down and curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-100 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce2.end"" end=""dummyRect.mouseout"" dur=""0.15s"" id=""bounce3"" />
                            <!-- slide down and curve out -->
                            <animate xlink:href=""#p"" ");
            WriteLiteral(@"attributeName=""d"" to=""M0,-160 Q150,-190 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce3.end"" end=""dummyRect.mouseout"" dur=""0.1s"" id=""bounce4"" />
                            <!-- curve in -->
                            <animate xlink:href=""#p"" attributeName=""d"" to=""M0,-160 Q150,-160 500,-160  V400 H0 V50"" fill=""freeze"" begin=""bounce4.end"" end=""dummyRect.mouseout"" dur=""0.05s"" id=""bounce5"" />
                        </svg>
                        <div class=""info"">
                            <article>
                                <h2>Chocolate Chip Loaf Cake</h2>
                                <h3>Cake</h3>
                                <ul>
                                    <li><i class=""fas fa-user-alt""></i> <span>8</span></li>
                                    <li><i class=""fas fa-clock""></i> </span><span>6-24 hours</span></li>
                                    <li><i class=""fas fa-signal""></i> <span>Beginner level</span></li>
                                    <li><i class=""fas");
            WriteLiteral(@" fa-fire""></i> </span><span>177Â°C</span></li>
                                </ul>
                                <p>This sangria is THE drink to make this fall. It combines red wine, brandy, cinnamon, apple cider, citrus, and of course â sweet honeycrisp apples! I highly suggest doubling the recipe because everyone will want more than 1 glass.</p>
                                <p class=""ingredients""><span>Ingredients:&nbsp;</span>3 cinnamon sticks (plus more for garnish), 2 honeycrisp apples, chopped, 1 orange, thinly sliced</p>
                            </article>
                        </div>
                    </div>
                    <div class=""card-blur""></div>
                </div>
            </div>
            <div class=""col-8"">
                <div class=""video-recipe"">
                    <iframe width=""100%""
                            src=""https://www.youtube.com//embed/kCNsI9ZZleY""
                            frameborder=""0""
                            gesture=""media""");
            WriteLiteral("\r\n                            allow=\"autoplay; encrypted-media\"\r\n                            allowfullscreen></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <script src=\"/js/TellMeMore.js></script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
